version: 2.1

jobs:
  wasm: # this job only builds the WASM wheel and does not test it, that is done in the emscripten.yml job via GHA.
    docker:
      - image: cimg/python:3.12
    resource_class: large
    steps:
      - checkout
      - run:
          # Current version is 3.1.58 for Pyodide 0.27.2, see
          # https://github.com/pyodide/pyodide/blob/266a08f3b09deb66d192735ff91abf2fd8f4f102/Makefile.envs#L2-L4
          # for information and for future upgrades
          name: Install Emscripten
          command: |
            git clone https://github.com/emscripten-core/emsdk.git
            cd emsdk
            ./emsdk install 3.1.58
            ./emsdk activate 3.1.58
            source emsdk_env.sh

            echo '#!/bin/bash' > ~/setup_env.sh
            echo "source $(pwd)/emsdk_env.sh" >> ~/setup_env.sh
            chmod +x ~/setup_env.sh
            cd ..
      - run:
          name: Install pyodide-build
          command: |
            pip install "pyodide-build>=0.29.2"
      - run:
          name: Build WASM wheel
          command: |
            source ~/setup_env.sh
            emcc --version

            pyodide build
            mkdir -p dist/wasm
            mv dist/*.whl dist/wasm/
      - persist_to_workspace:
          root: dist
          paths:
            - wasm

  doc:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - attach_workspace:
          at: dist
      - run:
          name: Copy WASM wheel to docs directory
          command: |
            mkdir -p doc/skimage_docs_wasm_wheels
            cp dist/wasm/*.whl doc/skimage_docs_wasm_wheels/
      - run:
          name: Install apt packages
          command: |
            sudo apt-get update
            sudo apt-get install ccache
      - run:
          name: Concatenate requirement files
          command: cat requirements/*.txt > requirements/all_requirements
      - restore_cache:
          name: restore cached data files
          keys:
            - data-v1-{{ checksum "skimage/data/_registry.py" }}
      - restore_cache:
          name: Restore cached pip dependencies
          keys:
            - packages-v1-{{ checksum "requirements/all_requirements" }}
      - restore_cache:
          name: Restore cached build files (ccache)
          keys:
            - ccache-v2-{{ .Branch }}
      - run:
          name: Install dependencies and build package
          command: |
            python3 -m pip install --upgrade pip
            python3 -m pip install -r requirements/build.txt
            python3 -m pip install -vv --no-build-isolation .
            # Ensure build succeeds without runtime requirements
            python3 -m pip install -r requirements/default.txt
            python3 -m pip install -r requirements/docs.txt
      - run:
          name: Print ccache performance
          command: |
            ccache -s
      - save_cache:
          name: Cache pip dependencies
          key: packages-v1-{{ checksum "requirements/all_requirements" }}
          paths:
            - ~/.cache/pip
      - save_cache:
          name: Cache build files (ccache)
          key: ccache-v2-{{ .Branch }}
          paths:
            - ~/.cache/ccache
      - run:
          name: Build doc
          no_output_timeout: 50m
          command: |
            cd doc
            PYTHON=python3 make clean
            PYTHON=python3 SPHINXOPTS="-j 1" make html
      - save_cache:
          name: Cache data files
          key: data-v1-{{ checksum "skimage/data/_registry.py" }}
          paths:
            - /home/circleci/.cache/scikit-image/master
      - store_artifacts:
          path: doc/build/html

workflows:
  build-doc:
    jobs:
      - wasm
      - doc:
          requires:
            - wasm
